/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hangman2;

import java.util.Random;

/**
 *
 * @author Youmin Zheng
 */
public class FrmMain extends javax.swing.JFrame {

    private int tries;
    
    Random random = new Random();
    String[] wordBank = {"GBACKTRACKIN","GJEOPARDIZIN","SHYDROXYZINE",
        "AEXTRAVAGANZ","SFRIZZINESSE","DCOMMUNALIZE","RTRANQUILIZE",
        "GBODYCHECKIN","YRECOGNIZABL","EHYPONOTIZABL"}
;
    
    private final int randomIndex = random.nextInt(wordBank.length);
    private final String guessWord = wordBank[randomIndex];
    
    
    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        guess0 = new javax.swing.JLabel();
        guess1 = new javax.swing.JLabel();
        guess2 = new javax.swing.JLabel();
        guess3 = new javax.swing.JLabel();
        guess4 = new javax.swing.JLabel();
        guess5 = new javax.swing.JLabel();
        guess6 = new javax.swing.JLabel();
        guess7 = new javax.swing.JLabel();
        guess8 = new javax.swing.JLabel();
        guess9 = new javax.swing.JLabel();
        guess11 = new javax.swing.JLabel();
        guess10 = new javax.swing.JLabel();
        V = new javax.swing.JButton();
        W = new javax.swing.JButton();
        F = new javax.swing.JButton();
        E = new javax.swing.JButton();
        H = new javax.swing.JButton();
        C = new javax.swing.JButton();
        D = new javax.swing.JButton();
        O = new javax.swing.JButton();
        N = new javax.swing.JButton();
        I = new javax.swing.JButton();
        P = new javax.swing.JButton();
        G = new javax.swing.JButton();
        J = new javax.swing.JButton();
        L = new javax.swing.JButton();
        K = new javax.swing.JButton();
        M = new javax.swing.JButton();
        R = new javax.swing.JButton();
        T = new javax.swing.JButton();
        S = new javax.swing.JButton();
        A = new javax.swing.JButton();
        Q = new javax.swing.JButton();
        B = new javax.swing.JButton();
        Z = new javax.swing.JButton();
        U = new javax.swing.JButton();
        Y = new javax.swing.JButton();
        X = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        guessTries = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Basic Application Example");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome to Hangman");

        guess0.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess0.setText("-");

        guess1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess1.setText("-");

        guess2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess2.setText("-");

        guess3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess3.setText("-");

        guess4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess4.setText("-");

        guess5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess5.setText("-");

        guess6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess6.setText("-");

        guess7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess7.setText("-");

        guess8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess8.setText("-");

        guess9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess9.setText("-");

        guess11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess11.setText("-");

        guess10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guess10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guess10.setText("-");

        V.setText("V");
        V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VActionPerformed(evt);
            }
        });

        W.setText("W");
        W.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WActionPerformed(evt);
            }
        });

        F.setText("F");
        F.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FActionPerformed(evt);
            }
        });

        E.setText("E");
        E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EActionPerformed(evt);
            }
        });

        H.setText("H");
        H.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HActionPerformed(evt);
            }
        });

        C.setText("C");
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        D.setText("D");
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        O.setText("O");
        O.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OActionPerformed(evt);
            }
        });

        N.setText("N");
        N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NActionPerformed(evt);
            }
        });

        I.setText("I");
        I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IActionPerformed(evt);
            }
        });

        P.setText("P");
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });

        G.setText("G");
        G.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GActionPerformed(evt);
            }
        });

        J.setText("J");
        J.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JActionPerformed(evt);
            }
        });

        L.setText("L");
        L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LActionPerformed(evt);
            }
        });

        K.setText("K");
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });

        M.setText("M");
        M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MActionPerformed(evt);
            }
        });

        R.setText("R");
        R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RActionPerformed(evt);
            }
        });

        T.setText("T");
        T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TActionPerformed(evt);
            }
        });

        S.setText("S");
        S.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SActionPerformed(evt);
            }
        });

        A.setText("A");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        Q.setText("Q");
        Q.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QActionPerformed(evt);
            }
        });

        B.setText("B");
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        Z.setText("Z");
        Z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZActionPerformed(evt);
            }
        });

        U.setText("U");
        U.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UActionPerformed(evt);
            }
        });

        Y.setText("Y");
        Y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YActionPerformed(evt);
            }
        });

        X.setText("X");
        X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("Stop Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        guessTries.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        guessTries.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guessTries.setText("0");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Tries");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(131, Short.MAX_VALUE)
                        .addComponent(guess0, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(guess11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guessTries, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(L, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(N, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(O, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Q, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(S, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(U, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(V, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(W, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(Z, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(H, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guessTries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guess0, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guess11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(H, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(N, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(O, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Q, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(U, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Z, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(V, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(W, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("A".equals(gWord[1])){
         guess11.setText("A");   
        }
        if("A".equals(gWord[2])){
         guess0.setText("A");   
        }
        if("A".equals(gWord[3])){
         guess1.setText("A");   
        }
        if("A".equals(gWord[4])){
         guess2.setText("A");   
        }
        if("A".equals(gWord[5])){
         guess3.setText("A");   
        }
        if("A".equals(gWord[6])){
         guess4.setText("A");   
        }
        if("A".equals(gWord[7])){
         guess5.setText("A");   
        }
        if("A".equals(gWord[8])){
         guess6.setText("A");   
        }
        if("A".equals(gWord[9])){
         guess7.setText("A");   
        }
        if("A".equals(gWord[10])){
         guess8.setText("A");   
        }
        if("A".equals(gWord[11])){
         guess9.setText("A");   
        }
        if("A".equals(gWord[12])){
         guess10.setText("A");
        }           
    }//GEN-LAST:event_AActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("B".equals(gWord[1])){
         guess11.setText("B");   
        }
        if("B".equals(gWord[2])){
         guess0.setText("B");   
        }
        if("B".equals(gWord[3])){
         guess1.setText("B");   
        }
        if("B".equals(gWord[4])){
         guess2.setText("B");   
        }
        if("B".equals(gWord[5])){
         guess3.setText("B");   
        }
        if("B".equals(gWord[6])){
         guess4.setText("B");   
        }
        if("B".equals(gWord[7])){
         guess5.setText("B");   
        }
        if("B".equals(gWord[8])){
         guess6.setText("B");   
        }
        if("B".equals(gWord[9])){
         guess7.setText("B");   
        }
        if("B".equals(gWord[10])){
         guess8.setText("B");   
        }
        if("B".equals(gWord[11])){
         guess9.setText("B");   
        }
        if("B".equals(gWord[12])){
         guess10.setText("B");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_BActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        new ButtonsUI().setVisible(true);    // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("C".equals(gWord[1])){
         guess11.setText("C");   
        }
        if("C".equals(gWord[2])){
         guess0.setText("C");   
        }
        if("C".equals(gWord[3])){
         guess1.setText("C");   
        }
        if("C".equals(gWord[4])){
         guess2.setText("C");   
        }
        if("C".equals(gWord[5])){
         guess3.setText("C");   
        }
        if("C".equals(gWord[6])){
         guess4.setText("C");   
        }
        if("C".equals(gWord[7])){
         guess5.setText("C");   
        }
        if("C".equals(gWord[8])){
         guess6.setText("C");   
        }
        if("C".equals(gWord[9])){
         guess7.setText("C");   
        }
        if("C".equals(gWord[10])){
         guess8.setText("C");   
        }
        if("C".equals(gWord[11])){
         guess9.setText("C");   
        }
        if("C".equals(gWord[12])){
         guess10.setText("C");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_CActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("D".equals(gWord[1])){
         guess11.setText("D");   
        }
        if("D".equals(gWord[2])){
         guess0.setText("D");   
        }
        if("D".equals(gWord[3])){
         guess1.setText("D");   
        }
        if("D".equals(gWord[4])){
         guess2.setText("D");   
        }
        if("D".equals(gWord[5])){
         guess3.setText("D");   
        }
        if("D".equals(gWord[6])){
         guess4.setText("D");   
        }
        if("D".equals(gWord[7])){
         guess5.setText("D");   
        }
        if("D".equals(gWord[8])){
         guess6.setText("D");   
        }
        if("D".equals(gWord[9])){
         guess7.setText("D");   
        }
        if("D".equals(gWord[10])){
         guess8.setText("D");   
        }
        if("D".equals(gWord[11])){
         guess9.setText("D");   
        }
        if("D".equals(gWord[12])){
         guess10.setText("D");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_DActionPerformed

    private void EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("E".equals(gWord[1])){
         guess11.setText("E");   
        }
        if("E".equals(gWord[2])){
         guess0.setText("E");   
        }
        if("E".equals(gWord[3])){
         guess1.setText("E");   
        }
        if("E".equals(gWord[4])){
         guess2.setText("E");   
        }
        if("E".equals(gWord[5])){
         guess3.setText("E");   
        }
        if("E".equals(gWord[6])){
         guess4.setText("E");   
        }
        if("E".equals(gWord[7])){
         guess5.setText("E");   
        }
        if("E".equals(gWord[8])){
         guess6.setText("E");   
        }
        if("E".equals(gWord[9])){
         guess7.setText("E");   
        }
        if("E".equals(gWord[10])){
         guess8.setText("E");   
        }
        if("E".equals(gWord[11])){
         guess9.setText("E");   
        }
        if("E".equals(gWord[12])){
         guess10.setText("E");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_EActionPerformed

    private void FActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("F".equals(gWord[1])){
         guess11.setText("F");   
        }
        if("F".equals(gWord[2])){
         guess0.setText("F");   
        }
        if("F".equals(gWord[3])){
         guess1.setText("F");   
        }
        if("F".equals(gWord[4])){
         guess2.setText("F");   
        }
        if("F".equals(gWord[5])){
         guess3.setText("F");   
        }
        if("F".equals(gWord[6])){
         guess4.setText("F");   
        }
        if("F".equals(gWord[7])){
         guess5.setText("F");   
        }
        if("F".equals(gWord[8])){
         guess6.setText("F");   
        }
        if("F".equals(gWord[9])){
         guess7.setText("F");   
        }
        if("F".equals(gWord[10])){
         guess8.setText("F");   
        }
        if("F".equals(gWord[11])){
         guess9.setText("F");   
        }
        if("F".equals(gWord[12])){
         guess10.setText("F");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_FActionPerformed

    private void GActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("G".equals(gWord[1])){
         guess11.setText("G");   
        }
        if("G".equals(gWord[2])){
         guess0.setText("G");   
        }
        if("G".equals(gWord[3])){
         guess1.setText("G");   
        }
        if("G".equals(gWord[4])){
         guess2.setText("G");   
        }
        if("G".equals(gWord[5])){
         guess3.setText("G");   
        }
        if("G".equals(gWord[6])){
         guess4.setText("G");   
        }
        if("G".equals(gWord[7])){
         guess5.setText("G");   
        }
        if("G".equals(gWord[8])){
         guess6.setText("G");   
        }
        if("G".equals(gWord[9])){
         guess7.setText("G");   
        }
        if("G".equals(gWord[10])){
         guess8.setText("G");   
        }
        if("G".equals(gWord[11])){
         guess9.setText("G");   
        }
        if("G".equals(gWord[12])){
         guess10.setText("G");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_GActionPerformed

    private void HActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("H".equals(gWord[1])){
         guess11.setText("H");   
        }
        if("H".equals(gWord[2])){
         guess0.setText("H");   
        }
        if("H".equals(gWord[3])){
         guess1.setText("H");   
        }
        if("H".equals(gWord[4])){
         guess2.setText("H");   
        }
        if("H".equals(gWord[5])){
         guess3.setText("H");   
        }
        if("H".equals(gWord[6])){
         guess4.setText("H");   
        }
        if("H".equals(gWord[7])){
         guess5.setText("H");   
        }
        if("H".equals(gWord[8])){
         guess6.setText("H");   
        }
        if("H".equals(gWord[9])){
         guess7.setText("H");   
        }
        if("H".equals(gWord[10])){
         guess8.setText("H");   
        }
        if("H".equals(gWord[11])){
         guess9.setText("H");   
        }
        if("H".equals(gWord[12])){
         guess10.setText("H");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_HActionPerformed

    private void IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("I".equals(gWord[1])){
         guess11.setText("I");   
        }
        if("I".equals(gWord[2])){
         guess0.setText("I");   
        }
        if("I".equals(gWord[3])){
         guess1.setText("I");   
        }
        if("I".equals(gWord[4])){
         guess2.setText("I");   
        }
        if("I".equals(gWord[5])){
         guess3.setText("I");   
        }
        if("I".equals(gWord[6])){
         guess4.setText("I");   
        }
        if("I".equals(gWord[7])){
         guess5.setText("I");   
        }
        if("I".equals(gWord[8])){
         guess6.setText("I");   
        }
        if("I".equals(gWord[9])){
         guess7.setText("I");   
        }
        if("I".equals(gWord[10])){
         guess8.setText("I");   
        }
        if("I".equals(gWord[11])){
         guess9.setText("I");   
        }
        if("I".equals(gWord[12])){
         guess10.setText("I");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_IActionPerformed

    private void JActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("J".equals(gWord[1])){
         guess11.setText("J");   
        }
        if("J".equals(gWord[2])){
         guess0.setText("J");   
        }
        if("J".equals(gWord[3])){
         guess1.setText("J");   
        }
        if("J".equals(gWord[4])){
         guess2.setText("J");   
        }
        if("J".equals(gWord[5])){
         guess3.setText("J");   
        }
        if("J".equals(gWord[6])){
         guess4.setText("J");   
        }
        if("J".equals(gWord[7])){
         guess5.setText("J");   
        }
        if("J".equals(gWord[8])){
         guess6.setText("J");   
        }
        if("J".equals(gWord[9])){
         guess7.setText("J");   
        }
        if("J".equals(gWord[10])){
         guess8.setText("J");   
        }
        if("J".equals(gWord[11])){
         guess9.setText("J");   
        }
        if("J".equals(gWord[12])){
         guess10.setText("J");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_JActionPerformed

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("K".equals(gWord[1])){
         guess11.setText("K");   
        }
        if("K".equals(gWord[2])){
         guess0.setText("K");   
        }
        if("K".equals(gWord[3])){
         guess1.setText("K");   
        }
        if("K".equals(gWord[4])){
         guess2.setText("K");   
        }
        if("K".equals(gWord[5])){
         guess3.setText("K");   
        }
        if("K".equals(gWord[6])){
         guess4.setText("K");   
        }
        if("K".equals(gWord[7])){
         guess5.setText("K");   
        }
        if("K".equals(gWord[8])){
         guess6.setText("K");   
        }
        if("K".equals(gWord[9])){
         guess7.setText("K");   
        }
        if("K".equals(gWord[10])){
         guess8.setText("K");   
        }
        if("K".equals(gWord[11])){
         guess9.setText("K");   
        }
        if("K".equals(gWord[12])){
         guess10.setText("K");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_KActionPerformed

    private void NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("N".equals(gWord[1])){
         guess11.setText("N");   
        }
        if("N".equals(gWord[2])){
         guess0.setText("N");   
        }
        if("N".equals(gWord[3])){
         guess1.setText("N");   
        }
        if("N".equals(gWord[4])){
         guess2.setText("N");   
        }
        if("N".equals(gWord[5])){
         guess3.setText("N");   
        }
        if("N".equals(gWord[6])){
         guess4.setText("N");   
        }
        if("N".equals(gWord[7])){
         guess5.setText("N");   
        }
        if("N".equals(gWord[8])){
         guess6.setText("N");   
        }
        if("N".equals(gWord[9])){
         guess7.setText("N");   
        }
        if("N".equals(gWord[10])){
         guess8.setText("N");   
        }
        if("N".equals(gWord[11])){
         guess9.setText("N");   
        }
        if("N".equals(gWord[12])){
         guess10.setText("N");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_NActionPerformed

    private void MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("M".equals(gWord[1])){
         guess11.setText("M");   
        }
        if("M".equals(gWord[2])){
         guess0.setText("M");   
        }
        if("M".equals(gWord[3])){
         guess1.setText("M");   
        }
        if("M".equals(gWord[4])){
         guess2.setText("M");   
        }
        if("M".equals(gWord[5])){
         guess3.setText("M");   
        }
        if("M".equals(gWord[6])){
         guess4.setText("M");   
        }
        if("M".equals(gWord[7])){
         guess5.setText("M");   
        }
        if("M".equals(gWord[8])){
         guess6.setText("M");   
        }
        if("M".equals(gWord[9])){
         guess7.setText("M");   
        }
        if("M".equals(gWord[10])){
         guess8.setText("M");   
        }
        if("M".equals(gWord[11])){
         guess9.setText("M");   
        }
        if("M".equals(gWord[12])){
         guess10.setText("M");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_MActionPerformed

    private void OActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("O".equals(gWord[1])){
         guess11.setText("O");   
        }
        if("O".equals(gWord[2])){
         guess0.setText("O");   
        }
        if("O".equals(gWord[3])){
         guess1.setText("O");   
        }
        if("O".equals(gWord[4])){
         guess2.setText("O");   
        }
        if("O".equals(gWord[5])){
         guess3.setText("O");   
        }
        if("O".equals(gWord[6])){
         guess4.setText("O");   
        }
        if("O".equals(gWord[7])){
         guess5.setText("O");   
        }
        if("O".equals(gWord[8])){
         guess6.setText("O");   
        }
        if("O".equals(gWord[9])){
         guess7.setText("O");   
        }
        if("O".equals(gWord[10])){
         guess8.setText("O");   
        }
        if("O".equals(gWord[11])){
         guess9.setText("O");   
        }
        if("O".equals(gWord[12])){
         guess10.setText("O");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_OActionPerformed

    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("P".equals(gWord[1])){
         guess11.setText("P");   
        }
        if("P".equals(gWord[2])){
         guess0.setText("P");   
        }
        if("P".equals(gWord[3])){
         guess1.setText("P");   
        }
        if("P".equals(gWord[4])){
         guess2.setText("P");   
        }
        if("P".equals(gWord[5])){
         guess3.setText("P");   
        }
        if("P".equals(gWord[6])){
         guess4.setText("P");   
        }
        if("P".equals(gWord[7])){
         guess5.setText("P");   
        }
        if("P".equals(gWord[8])){
         guess6.setText("P");   
        }
        if("P".equals(gWord[9])){
         guess7.setText("P");   
        }
        if("P".equals(gWord[10])){
         guess8.setText("P");   
        }
        if("P".equals(gWord[11])){
         guess9.setText("P");   
        }
        if("P".equals(gWord[12])){
         guess10.setText("P");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_PActionPerformed

    private void QActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("Q".equals(gWord[1])){
         guess11.setText("Q");   
        }
        if("Q".equals(gWord[2])){
         guess0.setText("Q");   
        }
        if("Q".equals(gWord[3])){
         guess1.setText("Q");   
        }
        if("Q".equals(gWord[4])){
         guess2.setText("Q");   
        }
        if("Q".equals(gWord[5])){
         guess3.setText("Q");   
        }
        if("Q".equals(gWord[6])){
         guess4.setText("Q");   
        }
        if("Q".equals(gWord[7])){
         guess5.setText("Q");   
        }
        if("Q".equals(gWord[8])){
         guess6.setText("Q");   
        }
        if("Q".equals(gWord[9])){
         guess7.setText("Q");   
        }
        if("Q".equals(gWord[10])){
         guess8.setText("Q");   
        }
        if("Q".equals(gWord[11])){
         guess9.setText("Q");   
        }
        if("Q".equals(gWord[12])){
         guess10.setText("Q");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_QActionPerformed

    private void RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("R".equals(gWord[1])){
         guess11.setText("R");   
        }
        if("R".equals(gWord[2])){
         guess0.setText("R");   
        }
        if("R".equals(gWord[3])){
         guess1.setText("R");   
        }
        if("R".equals(gWord[4])){
         guess2.setText("R");   
        }
        if("R".equals(gWord[5])){
         guess3.setText("R");   
        }
        if("R".equals(gWord[6])){
         guess4.setText("R");   
        }
        if("R".equals(gWord[7])){
         guess5.setText("R");   
        }
        if("R".equals(gWord[8])){
         guess6.setText("R");   
        }
        if("R".equals(gWord[9])){
         guess7.setText("R");   
        }
        if("R".equals(gWord[10])){
         guess8.setText("R");   
        }
        if("R".equals(gWord[11])){
         guess9.setText("R");   
        }
        if("R".equals(gWord[12])){
         guess10.setText("R");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_RActionPerformed

    private void SActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("S".equals(gWord[1])){
         guess11.setText("S");   
        }
        if("S".equals(gWord[2])){
         guess0.setText("S");   
        }
        if("S".equals(gWord[3])){
         guess1.setText("S");   
        }
        if("S".equals(gWord[4])){
         guess2.setText("S");   
        }
        if("S".equals(gWord[5])){
         guess3.setText("S");   
        }
        if("S".equals(gWord[6])){
         guess4.setText("S");   
        }
        if("S".equals(gWord[7])){
         guess5.setText("S");   
        }
        if("S".equals(gWord[8])){
         guess6.setText("S");   
        }
        if("S".equals(gWord[9])){
         guess7.setText("S");   
        }
        if("S".equals(gWord[10])){
         guess8.setText("S");   
        }
        if("S".equals(gWord[11])){
         guess9.setText("S");   
        }
        if("S".equals(gWord[12])){
         guess10.setText("S");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_SActionPerformed

    private void TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("T".equals(gWord[1])){
         guess11.setText("T");   
        }
        if("T".equals(gWord[2])){
         guess0.setText("T");   
        }
        if("T".equals(gWord[3])){
         guess1.setText("T");   
        }
        if("T".equals(gWord[4])){
         guess2.setText("T");   
        }
        if("T".equals(gWord[5])){
         guess3.setText("T");   
        }
        if("T".equals(gWord[6])){
         guess4.setText("T");   
        }
        if("T".equals(gWord[7])){
         guess5.setText("T");   
        }
        if("T".equals(gWord[8])){
         guess6.setText("T");   
        }
        if("T".equals(gWord[9])){
         guess7.setText("T");   
        }
        if("T".equals(gWord[10])){
         guess8.setText("T");   
        }
        if("T".equals(gWord[11])){
         guess9.setText("T");   
        }
        if("T".equals(gWord[12])){
         guess10.setText("T");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_TActionPerformed

    private void UActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("U".equals(gWord[1])){
         guess11.setText("U");   
        }
        if("U".equals(gWord[2])){
         guess0.setText("U");   
        }
        if("U".equals(gWord[3])){
         guess1.setText("U");   
        }
        if("U".equals(gWord[4])){
         guess2.setText("U");   
        }
        if("U".equals(gWord[5])){
         guess3.setText("U");   
        }
        if("U".equals(gWord[6])){
         guess4.setText("U");   
        }
        if("U".equals(gWord[7])){
         guess5.setText("U");   
        }
        if("U".equals(gWord[8])){
         guess6.setText("U");   
        }
        if("U".equals(gWord[9])){
         guess7.setText("U");   
        }
        if("U".equals(gWord[10])){
         guess8.setText("U");   
        }
        if("U".equals(gWord[11])){
         guess9.setText("U");   
        }
        if("U".equals(gWord[12])){
         guess10.setText("U");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_UActionPerformed

    private void VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("V".equals(gWord[1])){
         guess11.setText("V");   
        }
        if("V".equals(gWord[2])){
         guess0.setText("V");   
        }
        if("V".equals(gWord[3])){
         guess1.setText("V");   
        }
        if("V".equals(gWord[4])){
         guess2.setText("V");   
        }
        if("V".equals(gWord[5])){
         guess3.setText("V");   
        }
        if("V".equals(gWord[6])){
         guess4.setText("V");   
        }
        if("V".equals(gWord[7])){
         guess5.setText("V");   
        }
        if("V".equals(gWord[8])){
         guess6.setText("V");   
        }
        if("V".equals(gWord[9])){
         guess7.setText("V");   
        }
        if("V".equals(gWord[10])){
         guess8.setText("V");   
        }
        if("V".equals(gWord[11])){
         guess9.setText("V");   
        }
        if("V".equals(gWord[12])){
         guess10.setText("V");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_VActionPerformed

    private void WActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("W".equals(gWord[1])){
         guess11.setText("W");   
        }
        if("W".equals(gWord[2])){
         guess0.setText("W");   
        }
        if("W".equals(gWord[3])){
         guess1.setText("W");   
        }
        if("W".equals(gWord[4])){
         guess2.setText("W");   
        }
        if("W".equals(gWord[5])){
         guess3.setText("W");   
        }
        if("W".equals(gWord[6])){
         guess4.setText("W");   
        }
        if("W".equals(gWord[7])){
         guess5.setText("W");   
        }
        if("W".equals(gWord[8])){
         guess6.setText("W");   
        }
        if("W".equals(gWord[9])){
         guess7.setText("W");   
        }
        if("W".equals(gWord[10])){
         guess8.setText("W");   
        }
        if("W".equals(gWord[11])){
         guess9.setText("W");   
        }
        if("W".equals(gWord[12])){
         guess10.setText("W");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_WActionPerformed

    private void XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("X".equals(gWord[1])){
         guess11.setText("X");   
        }
        if("X".equals(gWord[2])){
         guess0.setText("X");   
        }
        if("X".equals(gWord[3])){
         guess1.setText("X");   
        }
        if("X".equals(gWord[4])){
         guess2.setText("X");   
        }
        if("X".equals(gWord[5])){
         guess3.setText("X");   
        }
        if("X".equals(gWord[6])){
         guess4.setText("X");   
        }
        if("X".equals(gWord[7])){
         guess5.setText("X");   
        }
        if("X".equals(gWord[8])){
         guess6.setText("X");   
        }
        if("X".equals(gWord[9])){
         guess7.setText("X");   
        }
        if("X".equals(gWord[10])){
         guess8.setText("X");   
        }
        if("X".equals(gWord[11])){
         guess9.setText("X");   
        }
        if("X".equals(gWord[12])){
         guess10.setText("X");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_XActionPerformed

    private void YActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("Y".equals(gWord[1])){
         guess11.setText("Y");   
        }
        if("Y".equals(gWord[2])){
         guess0.setText("Y");   
        }
        if("Y".equals(gWord[3])){
         guess1.setText("Y");   
        }
        if("Y".equals(gWord[4])){
         guess2.setText("Y");   
        }
        if("Y".equals(gWord[5])){
         guess3.setText("Y");   
        }
        if("Y".equals(gWord[6])){
         guess4.setText("Y");   
        }
        if("Y".equals(gWord[7])){
         guess5.setText("Y");   
        }
        if("Y".equals(gWord[8])){
         guess6.setText("Y");   
        }
        if("Y".equals(gWord[9])){
         guess7.setText("Y");   
        }
        if("Y".equals(gWord[10])){
         guess8.setText("Y");   
        }
        if("Y".equals(gWord[11])){
         guess9.setText("Y");   
        }
        if("Y".equals(gWord[12])){
         guess10.setText("Y");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_YActionPerformed

    private void ZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("Z".equals(gWord[1])){
         guess11.setText("Z");   
        }
        if("Z".equals(gWord[2])){
         guess0.setText("Z");   
        }
        if("Z".equals(gWord[3])){
         guess1.setText("Z");   
        }
        if("Z".equals(gWord[4])){
         guess2.setText("Z");   
        }
        if("Z".equals(gWord[5])){
         guess3.setText("Z");   
        }
        if("Z".equals(gWord[6])){
         guess4.setText("Z");   
        }
        if("Z".equals(gWord[7])){
         guess5.setText("Z");   
        }
        if("Z".equals(gWord[8])){
         guess6.setText("Z");   
        }
        if("Z".equals(gWord[9])){
         guess7.setText("Z");   
        }
        if("Z".equals(gWord[10])){
         guess8.setText("Z");   
        }
        if("Z".equals(gWord[11])){
         guess9.setText("Z");   
        }
        if("Z".equals(gWord[12])){
         guess10.setText("Z");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_ZActionPerformed

    private void LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LActionPerformed
        tries++;
        guessTries.setText(Integer.toString(tries));
        
        String[] gWord;
        gWord = guessWord.split("");
        if("L".equals(gWord[1])){
         guess11.setText("L");   
        }
        if("L".equals(gWord[2])){
         guess0.setText("L");   
        }
        if("L".equals(gWord[3])){
         guess1.setText("L");   
        }
        if("L".equals(gWord[4])){
         guess2.setText("L");   
        }
        if("L".equals(gWord[5])){
         guess3.setText("L");   
        }
        if("L".equals(gWord[6])){
         guess4.setText("L");   
        }
        if("L".equals(gWord[7])){
         guess5.setText("L");   
        }
        if("L".equals(gWord[8])){
         guess6.setText("L");   
        }
        if("L".equals(gWord[9])){
         guess7.setText("L");   
        }
        if("L".equals(gWord[10])){
         guess8.setText("L");   
        }
        if("L".equals(gWord[11])){
         guess9.setText("L");   
        }
        if("L".equals(gWord[12])){
         guess10.setText("L");
        }      // TODO add your handling code here:
    }//GEN-LAST:event_LActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton A;
    private javax.swing.JButton B;
    private javax.swing.JButton C;
    private javax.swing.JButton D;
    private javax.swing.JButton E;
    private javax.swing.JButton F;
    private javax.swing.JButton G;
    private javax.swing.JButton H;
    private javax.swing.JButton I;
    private javax.swing.JButton J;
    private javax.swing.JButton K;
    private javax.swing.JButton L;
    private javax.swing.JButton M;
    private javax.swing.JButton N;
    private javax.swing.JButton O;
    private javax.swing.JButton P;
    private javax.swing.JButton Q;
    private javax.swing.JButton R;
    private javax.swing.JButton S;
    private javax.swing.JButton T;
    private javax.swing.JButton U;
    private javax.swing.JButton V;
    private javax.swing.JButton W;
    private javax.swing.JButton X;
    private javax.swing.JButton Y;
    private javax.swing.JButton Z;
    public javax.swing.JLabel guess0;
    public javax.swing.JLabel guess1;
    public javax.swing.JLabel guess10;
    public javax.swing.JLabel guess11;
    public javax.swing.JLabel guess2;
    public javax.swing.JLabel guess3;
    public javax.swing.JLabel guess4;
    public javax.swing.JLabel guess5;
    public javax.swing.JLabel guess6;
    public javax.swing.JLabel guess7;
    public javax.swing.JLabel guess8;
    public javax.swing.JLabel guess9;
    private javax.swing.JLabel guessTries;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
